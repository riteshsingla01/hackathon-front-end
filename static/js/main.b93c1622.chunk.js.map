{"version":3,"sources":["logo.svg","App.js","Header.js","DefaultPageTheme.js","SearchPage.js","serviceWorker.js","index.js"],"names":["module","exports","App","useStyles","makeStyles","theme","root","flexGrow","title","ButtonAppBar","classes","className","AppBar","position","style","background","Toolbar","Typography","headerTintColor","align","variant","Button","createMuiTheme","palette","primary","main","contrastText","secondary","calmblue","backgroundColor","color","poppingpurple","gradientgray","SearchPage","props","pageRef","React","createRef","inputs","onZipChange","bind","onPhoneNumberChange","clearInputs","e","isNaN","target","value","replace","length","slice","substring","charAt","number","indexOf","nodes","this","alert","i","RootRef","rootRef","Grid","container","spacing","justify","item","TextField","id","label","ref","push","marginTop","onChange","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","useRoutes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b93c1622.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { borders } from '@material-ui/system';\r\nimport './HeaderStyle.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ background: '#DFE1DF' }}>\r\n        <Toolbar>\r\n          <Typography  headerTintColor = '#000000' align = \"center\" variant=\"h4\" className={classes.title}>\r\n            Amplify\r\n          </Typography>\r\n          <Button variant=\"outlined\" className=\"menuButton\"> Login </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst stjudered = '#d11947';\r\nconst stjudewhite = '#ffffff';\r\nconst stjudepurple = '#712d91';\r\nconst stjudeblue = '#008ccf';\r\nconst stjudedarkgray = '#878a8f';\r\nconst stjudelightgray = '#c7c9c8';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: stjudered,\r\n      contrastText: stjudewhite\r\n    },\r\n    secondary: {\r\n      main: stjudewhite,\r\n      contrastText: stjudered\r\n    },\r\n    calmblue: {\r\n      backgroundColor: stjudeblue,\r\n      color: stjudewhite\r\n    },\r\n    poppingpurple: {\r\n      backgroundColor: stjudepurple,\r\n      color: stjudewhite\r\n    },\r\n    gradientgray: {\r\n      background: 'linear-gradient(to top, ' + stjudedarkgray + ', ' + stjudelightgray + ' 10%, ' + stjudewhite + ' 35%)'\r\n    }\r\n  }\r\n});\r\n\r\nexport { theme };\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport RootRef from '@material-ui/core/RootRef'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\nimport Header from './Header'\r\nimport { theme } from './DefaultPageTheme'\r\nimport './DefaultPageStyle.css'\r\n\r\nclass SearchPage extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.pageRef = React.createRef();\r\n    this.inputs = [];\r\n\r\n    this.onZipChange = this.onZipChange.bind(this);\r\n    this.onPhoneNumberChange = this.onPhoneNumberChange.bind(this);\r\n    this.clearInputs = this.clearInputs.bind(this);\r\n  }\r\n\r\n  onZipChange(e)\r\n  {\r\n    if (isNaN(e.target.value.replace('-', '')) || e.target.value.length > 10 || e.target.value.slice(-1) == '-')\r\n    {\r\n      e.target.value = e.target.value.substring(0, e.target.value.length - 1)\r\n    }\r\n    else if (e.target.value.length == 6)\r\n    {\r\n      e.target.value = e.target.value.substring(0, 5) + '-' + e.target.value.charAt(5);\r\n    }\r\n  }\r\n\r\n  _cleanPhoneNumber(number)\r\n  {\r\n    if (number.length)\r\n\r\n    if (number.length != 13\r\n      || number.charAt(0) != '('\r\n      || number.charAt(4) != ')'\r\n      || number.charAt(8) != '-'\r\n      || isNaN(number.substring(1, 4))\r\n      || isNaN(number.substring(5, 8))\r\n      || isNaN(number.substring(9, 13)))\r\n    {\r\n      return null;\r\n    }\r\n\r\n    return number.replace('(', '').replace(')', '').replace('-', '');\r\n  }\r\n\r\n  onPhoneNumberChange(e)\r\n  {\r\n    if (e.target.value.length > 13 || isNaN(e.target.value.replace('(', '').replace(')', '').replace('-', '')) || e.target.value.slice(-1) == '(' || e.target.value.slice(-1) == ')' || e.target.value.slice(-1) == '-')\r\n    {\r\n      e.target.value = e.target.value.substring(0, e.target.value.length - 1);\r\n    }\r\n    else if (e.target.value.length == 4)\r\n    {\r\n      e.target.value = '(' + e.target.value.substring(0, 3) + ')' + e.target.value.charAt(3);\r\n    }\r\n    else if (e.target.value.length == 9)\r\n    {\r\n      e.target.value = e.target.value.substring(0, 8) + '-' + e.target.value.charAt(8);\r\n    }\r\n\r\n    if (e.target.value.charAt(0) == '(' && e.target.value.indexOf(')') == -1)\r\n    {\r\n      e.target.value = e.target.value.substring(1, e.target.value.length);\r\n    }\r\n  }\r\n\r\n  clearInputs()\r\n  {\r\n    var nodes = this.inputs;\r\n    alert(nodes.length);\r\n    for (var i = 0; i < nodes.length; i++)\r\n    {\r\n      alert(nodes[i]);\r\n    }\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Header />\r\n        <RootRef rootRef={this.pageRef}>\r\n          <div className='page'>\r\n            <Grid container>\r\n              <Grid container spacing={2} justify='left'>\r\n                <Grid item>\r\n                  <TextField id='first-name' label='First Name' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField id='middle-name' label='Middle Name' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField id='last-name' label='Last Name' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} />\r\n                </Grid>\r\n                <Grid item style={{ flexGrow: 2 }}></Grid>\r\n                <Grid item>\r\n                  <TextField id='constituent-id' label='Constituent ID' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container style={{ marginTop: '2rem' }} spacing={2} justify='left'>\r\n                <Grid item>\r\n                  <TextField id='street1' label='Address' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField id='street2' label='Address 2' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField id='city' label='City' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField id='state' label='State' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField id='zip' label='Zip Code' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} onChange={this.onZipChange} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container style={{ marginTop: '2rem' }} spacing={2} justify='left'>\r\n                <Grid item>\r\n                  <TextField id='email' label='Email' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField id='phone' label='Phone Number' ref={(e) => this.inputs.push(e)} style={theme.palette.gradientgray} onChange={this.onPhoneNumberChange} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container style={{ marginTop: '2rem' }} spacing={2} justify='left'>\r\n                <Grid item>\r\n                  <Button id='searchButton' variant='contained' style={theme.palette.calmblue}>Search</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button id='clearButton' variant='contained' style={theme.palette.calmblue} onClick={this.clearInputs}>Clear</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </RootRef>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { useRoutes } from 'hookrouter'\r\nimport './index.css';\r\nimport App from './App';\r\nimport SearchPage from './SearchPage'\r\nimport Header from './Header'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\nuseRoutes({\r\n  '/': () => <Header />,\r\n  '/search': () => <SearchPage />\r\n})\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}